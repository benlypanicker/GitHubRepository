package com.example.rmtsampleflight.v1.entitytypes;
/*

 Auto-Generated by SAP NetWeaver Gateway Productivity Accelerator, Version 1.1.1

*/
import java.net.MalformedURLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import android.annotation.SuppressLint;
import com.sap.gwpa.proxy.BaseEntityType;
import com.sap.gwpa.proxy.ODataQuery;
import com.sap.gwpa.proxy.TypeConverter;
import com.sap.mobile.lib.parser.IODataEntry;
import com.sap.mobile.lib.parser.IODataProperty;
import com.sap.mobile.lib.parser.IODataSchema;
import com.sap.mobile.lib.parser.IODataServiceDocument;
import com.sap.mobile.lib.parser.IParser;
import com.sap.mobile.lib.parser.ODataEntry;

/**
 * Travelagency Entity Type 
 *
 * <br>key (agencynum)
 */
public class Travelagency extends BaseEntityType 
{
	// Travelagency properties
    private String agencynum;
    private String NAME;
    private String STREET;
    private String POSTBOX;
    private String POSTCODE;
    private String CITY;
    private String COUNTRY;
    private String REGION;
    private String TELEPHONE;
    private String URL;
    private String LANGU;
    private String CURRENCY;
    private String mimeType;

	// reference to the parser
	@SuppressWarnings("unused")
	private IParser parser;
	// reference to the schema
	@SuppressWarnings("unused")
	private IODataSchema schema;

	@SuppressLint("SimpleDateFormat")
	private DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");


	private static Map<String, String> travelagencyLabels;

	private static Map<String, String> travelagencyTypes;	
	
	/**
	 * Constructor
	 * @param entry
	 * @throws MalformedURLException
	 */
	public Travelagency(final IODataEntry entry, IParser parser, IODataSchema schema) throws MalformedURLException
	{
		super(entry);
		this.agencynum =  TypeConverter.getAsString(entry.getPropertyValue("agencynum"));
		this.NAME =  TypeConverter.getAsString(entry.getPropertyValue("NAME"));
		this.STREET =  TypeConverter.getAsString(entry.getPropertyValue("STREET"));
		this.POSTBOX =  TypeConverter.getAsString(entry.getPropertyValue("POSTBOX"));
		this.POSTCODE =  TypeConverter.getAsString(entry.getPropertyValue("POSTCODE"));
		this.CITY =  TypeConverter.getAsString(entry.getPropertyValue("CITY"));
		this.COUNTRY =  TypeConverter.getAsString(entry.getPropertyValue("COUNTRY"));
		this.REGION =  TypeConverter.getAsString(entry.getPropertyValue("REGION"));
		this.TELEPHONE =  TypeConverter.getAsString(entry.getPropertyValue("TELEPHONE"));
		this.URL =  TypeConverter.getAsString(entry.getPropertyValue("URL"));
		this.LANGU =  TypeConverter.getAsString(entry.getPropertyValue("LANGU"));
		this.CURRENCY =  TypeConverter.getAsString(entry.getPropertyValue("CURRENCY"));
		this.mimeType =  TypeConverter.getAsString(entry.getPropertyValue("mimeType"));
	    this.parser = parser;
        this.schema = schema;
 	}
	
	/**
	 * Travelagency Constructor</br>
	 * Dummy values may apply
	 *
	 */
	public Travelagency( String agencynum) 
	{
		super(new ODataEntry());
		
        this.setAgencynum(agencynum);
	}



	// Travelagency properties getters and setters
		
	/**
	 * @return - String Agency No.
	 */
	public String getAgencynum()
	{
		return this.agencynum;
	}
	
	/**
	 * @param agencynum - Agency No.
	 */
	public void setAgencynum(String agencynum)
	{
		this.agencynum = agencynum;
		
		getEntry().putPropertyValue("agencynum", agencynum);
	}
		
	/**
	 * @return - String Travel agency name
	 */
	public String getNAME()
	{
		return this.NAME;
	}
	
	/**
	 * @param NAME - Travel agency name
	 */
	public void setNAME(String NAME)
	{
		this.NAME = NAME;
		
		getEntry().putPropertyValue("NAME", NAME);
	}
		
	/**
	 * @return - String Street
	 */
	public String getSTREET()
	{
		return this.STREET;
	}
	
	/**
	 * @param STREET - Street
	 */
	public void setSTREET(String STREET)
	{
		this.STREET = STREET;
		
		getEntry().putPropertyValue("STREET", STREET);
	}
		
	/**
	 * @return - String PO Box
	 */
	public String getPOSTBOX()
	{
		return this.POSTBOX;
	}
	
	/**
	 * @param POSTBOX - PO Box
	 */
	public void setPOSTBOX(String POSTBOX)
	{
		this.POSTBOX = POSTBOX;
		
		getEntry().putPropertyValue("POSTBOX", POSTBOX);
	}
		
	/**
	 * @return - String Postal Code
	 */
	public String getPOSTCODE()
	{
		return this.POSTCODE;
	}
	
	/**
	 * @param POSTCODE - Postal Code
	 */
	public void setPOSTCODE(String POSTCODE)
	{
		this.POSTCODE = POSTCODE;
		
		getEntry().putPropertyValue("POSTCODE", POSTCODE);
	}
		
	/**
	 * @return - String City
	 */
	public String getCITY()
	{
		return this.CITY;
	}
	
	/**
	 * @param CITY - City
	 */
	public void setCITY(String CITY)
	{
		this.CITY = CITY;
		
		getEntry().putPropertyValue("CITY", CITY);
	}
		
	/**
	 * @return - String Country
	 */
	public String getCOUNTRY()
	{
		return this.COUNTRY;
	}
	
	/**
	 * @param COUNTRY - Country
	 */
	public void setCOUNTRY(String COUNTRY)
	{
		this.COUNTRY = COUNTRY;
		
		getEntry().putPropertyValue("COUNTRY", COUNTRY);
	}
		
	/**
	 * @return - String Region
	 */
	public String getREGION()
	{
		return this.REGION;
	}
	
	/**
	 * @param REGION - Region
	 */
	public void setREGION(String REGION)
	{
		this.REGION = REGION;
		
		getEntry().putPropertyValue("REGION", REGION);
	}
		
	/**
	 * @return - String Tel.
	 */
	public String getTELEPHONE()
	{
		return this.TELEPHONE;
	}
	
	/**
	 * @param TELEPHONE - Tel.
	 */
	public void setTELEPHONE(String TELEPHONE)
	{
		this.TELEPHONE = TELEPHONE;
		
		getEntry().putPropertyValue("TELEPHONE", TELEPHONE);
	}
		
	/**
	 * @return - String Travel agency URL
	 */
	public String getURL()
	{
		return this.URL;
	}
	
	/**
	 * @param URL - Travel agency URL
	 */
	public void setURL(String URL)
	{
		this.URL = URL;
		
		getEntry().putPropertyValue("URL", URL);
	}
		
	/**
	 * @return - String Language
	 */
	public String getLANGU()
	{
		return this.LANGU;
	}
	
	/**
	 * @param LANGU - Language
	 */
	public void setLANGU(String LANGU)
	{
		this.LANGU = LANGU;
		
		getEntry().putPropertyValue("LANGU", LANGU);
	}
		
	/**
	 * @return - String Trav.Agency.Curr
	 */
	public String getCURRENCY()
	{
		return this.CURRENCY;
	}
	
	/**
	 * @param CURRENCY - Trav.Agency.Curr
	 */
	public void setCURRENCY(String CURRENCY)
	{
		this.CURRENCY = CURRENCY;
		
		getEntry().putPropertyValue("CURRENCY", CURRENCY);
	}
		
	/**
	 * @return - String MIME Type
	 */
	public String getMimeType()
	{
		return this.mimeType;
	}
	
	/**
	 * @param mimeType - MIME Type
	 */
	public void setMimeType(String mimeType)
	{
		this.mimeType = mimeType;
		
		getEntry().putPropertyValue("mimeType", mimeType);
	}
	
	/**
	 * @return - representation of the Entity Type object in OData4SAP format
	 */
	public String getStringPayload()  
	{
		String xml = null;
		
		xml = getEntry().toXMLString();
			
		return xml;
	}
	
	/**
	 * @return - self ODataQuery object
	 * @throws MalformedURLException 
	 */
	public ODataQuery getEntityQuery() throws MalformedURLException  
	{
		return new ODataQuery(getEntry().getSelfLink().getUrl());
	}
	
	/**
	 * @return - the date format.
	 */
	public DateFormat getDateFormat()
	{
		return this.dateFormat;
	}


	/**
    * Static method that loads all of the entity type property labels. 
    * This method is called when the service class is initialized.
    * @param service Service document object containing all of the entity type properties.
   	*/	
    public static void loadLabels(IODataServiceDocument service)
    {
    	List<IODataProperty> properties = getSchemaPropertiesFromCollection(service, "TravelagencyCollection" );
        
    	travelagencyLabels = new HashMap<String, String>();
    	travelagencyTypes = new HashMap<String, String>();
    	
    	if (properties != null)
    	{
	        for (IODataProperty property : properties) 
	        {
	        	travelagencyLabels.put(property.getName(), property.getLabel());
	        	travelagencyTypes.put(property.getName(), property.getType());
			}
    	}
    }
    
    
    /**
    * Static method that returns the type for a given property name.
    * @param propertyName Property name.
    * @return Property label.
   	*/
    public static String getTypeForProperty(String propertyName)
    {
        return getLabelFromDictionary(travelagencyTypes, propertyName);
    }
    
    
    /**
    * Static method that returns the label for a given property name.
    * @param propertyName Property name.
    * @return Property label.
   	*/
    public static String getLabelForProperty(String propertyName)
    {
        return getLabelFromDictionary(travelagencyLabels, propertyName);
    }
}